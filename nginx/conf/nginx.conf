worker_processes 4;

events {
    worker_connections 4096;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr info;

     map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     30m;
        ~image/                    max;
    }

    upstream api_server {
        server backend:5000;
    }

    server {
        listen 80;
        listen 443;

        if ($http_x_forwarded_proto = 'http') {
            return 301 https://$host$request_uri;
        }

        keepalive_timeout 65;
        keepalive_requests 100000;
        tcp_nopush on;
        tcp_nodelay on;
        sendfile on;

        location / {
            gzip on;
            gzip_types ~text/ ~image/ ~audio/ ~video/ ~application/;
            gzip_comp_level 2;
            gzip_http_version 1.0;
            gzip_proxied any;
            gzip_min_length 1024;
            gzip_buffers 16 8k;

             # Disable for IE < 6 because there are some known problems
            gzip_disable "MSIE [1-6].(?!.*SV1)";

            # Add a vary header for downstream proxies to avoid sending cached gzipped files to IE6
            gzip_vary on;

            expires $expires;

            autoindex on;

            root /usr/share/nginx/html;
            include /etc/nginx/mime.types;
            try_files $uri $uri/ /index.html =404;
        }

        # Trailing / matters 
        location /api/ {
            proxy_pass http://api_server/;
            # proxy_pass http://api.mappening.io:5000/api/;
        }
    }
}
